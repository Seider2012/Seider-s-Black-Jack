import java.util.Random;

public class Spiel {

	static Karte[] deck = new Karte[312];

	static int rand;
	static Karte verteilte = new Karte(0);

	static int b = 0;

	public static void main(String[] args) {

		int rand;
		Karte verteilte = new Karte(0);
		deck = erzeugeDeck(deck);

		System.out.print(deck[1].getZahl() + "\n");

		Hand croupier = new Hand(deck, 0);
		System.out.print("\n");

		Hand spieler = new Hand(deck, 2);

		ausgabe(spieler);
		System.out.print(spieler.getKarten()[0].getZahl() + "    "
				+ spieler.getKarten()[1].getZahl() + "\n");

		ausgabe(croupier);
		System.out.print("\n");
		// vergleiche(croupier, spieler);

	}

	private static void ausgabe(Hand spieler2) {
		// TODO Auto-generated method stub
		// spieler.toString();
		System.out.print(spieler2.toString() + "\n");
	}

	public static void vergleiche(Hand hand1, Hand hand2) {
		int sum1 = 0, sum2 = 0;
		for (int i = 0; i < hand1.getKarten().length; i++) {
			sum1 += hand1.getKarten()[i].getZahl();
		}
		for (int i = 0; i < hand2.getKarten().length; i++) {
			sum2 += hand2.getKarten()[i].getZahl();
		}
		if (sum1 > 21) {
			sum1 = -1;
		}
		if (sum2 > 21) {
			sum2 = -1;
		}
		if (sum1 < sum2) {
			System.out.println("Hand 1 ist der Sieger");
		}
		if (sum2 < sum1) {
			System.out.println("Hand 2 ist der Sieger");
		}
	}

	public static Karte[] erzeugeDeck(Karte[] deck) {
		for (int i = 0; i < 312; i++) {

			if (i < 13) {
				deck[i] = new Karte(i + 1, 1);
			} else if (i < 26) {
				deck[i] = new Karte(i + 1, 2);
			} else if (i < 39) {
				deck[i] = new Karte(i + 1, 3);
			} else {
				deck[i] = new Karte(i + 1, 4);
			}
		}
		return deck;
	}

	static protected int retRandomInt(int hochstwert) {
		Random r = new Random();
		return r.nextInt(hochstwert);
	}

	public Karte karteZiehen(Karte[] pokerkarten, int kartenanzahl) {

		rand = retRandomInt(pokerkarten.length - kartenanzahl);

		System.out.print(pokerkarten[rand].getZahl());
		verteilte.setZahl(pokerkarten[rand].getZahl());
		verteilte.setArt(pokerkarten[rand].getArt());
		pokerkarten[rand].setZahl(pokerkarten[pokerkarten.length - 1
				- kartenanzahl].getZahl());
		pokerkarten[rand].setArt(pokerkarten[pokerkarten.length - 1
				- kartenanzahl].getArt());
		pokerkarten[pokerkarten.length - 1 - kartenanzahl].setArt(verteilte
				.getArt());
		pokerkarten[pokerkarten.length - 1 - kartenanzahl].setZahl(verteilte
				.getZahl());

		return verteilte;
	}
}
